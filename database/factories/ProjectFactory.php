<?php

namespace Database\Factories;

use Illuminate\Database\Eloquent\Factories\Factory;

class ProjectFactory extends Factory
{
    protected $model = \App\Models\Project::class;

    public function definition(): array
    {
        $faker = \Faker\Factory::create('ru_RU');

        $projectTypes = [
            'Разработка CRM-системы',
            'Создание интернет-магазина',
            'Мобильное приложение',
            'Веб-портал',
            'Интеграция API',
            'Редизайн сайта',
            'Автоматизация процессов',
            'Разработка корпоративного сайта',
            'E-commerce платформа',
            'Личный кабинет',
            'Чат-бот для Telegram',
            'Система управления заказами',
            'Платформа для обучения',
            'Разработка ERP-системы',
            'Создание маркетплейса',
            'Система аналитики данных',
            'Веб-приложение для логистики',
            'Платформа для мероприятий',
            'Система бронирования',
            'Разработка дашборда',
            'Интеграция с 1С',
            'Создание блога',
            'Платформа для стриминга',
            'Разработка API для финтеха',
            'Система управления складом'
        ];

        $industries = [
            'ритейла',
            'финтеха',
            'медицины',
            'образования',
            'логистики',
            'туризма',
            'недвижимости',
            'автобизнеса',
            'производства',
            'маркетинга',
            'гейминга',
            'страхования',
            'энергетики',
            'строительства',
            'агропрома',
            'госсектора',
            'телекоммуникаций',
            'медиа',
            'HoReCa',
            'электронной коммерции',
            'фитнес-индустрии',
            'юридических услуг',
            'банковского сектора',
            'ИТ-услуг'
        ];

        $annotations = [
            'Создание системы для управления клиентскими данными с интеграцией API.',
            'Разработка адаптивного интернет-магазина с поддержкой мультивалютности.',
            'Мобильное приложение для бронирования услуг с push-уведомлениями.',
            'Веб-портал для автоматизации внутренних процессов компании.',
            'Редизайн существующего сайта с акцентом на современный UX/UI.',
            'Интеграция с внешними API для обмена данными в реальном времени.',
            'Создание системы аналитики с дашбордами и визуализацией данных.',
            'Разработка чат-бота для автоматизации клиентской поддержки.',
            'Платформа для управления проектами с функцией трекинга задач.',
            'Система бронирования для туристических услуг с интеграцией платежей.',
            'Создание корпоративного сайта с SEO-оптимизацией.',
            'Разработка ERP для оптимизации процессов производства.',
            'Создание маркетплейса с поддержкой множества продавцов.',
            'Веб-приложение для управления логистическими процессами.',
            'Платформа для проведения онлайн-мероприятий с видеотрансляцией.',
            'Система управления складом с интеграцией IoT-устройств.',
            'Разработка дашборда для мониторинга KPI компании.',
            'Создание блога с функцией подписки и комментариев.',
            'Платформа для стриминга с поддержкой прямых трансляций.',
            'Интеграция с 1С для автоматизации бухгалтерии.',
            'Разработка API для обработки финансовых транзакций.',
            'Система управления заказами с трекингом доставки.',
            'Платформа для обучения с поддержкой курсов и тестов.',
            'Создание системы аналитики для маркетинговых кампаний.'
        ];

        return [
            'task_id' => null,
            'status_id' => null,
            'name' => $faker->randomElement($projectTypes) . ' для ' . $faker->randomElement($industries),
            'annotation' => $faker->optional()->randomElement($annotations),
            'is_close' => $faker->boolean(20),
            'mentor_id' => null,
            'created_at' => now(),
            'updated_at' => now(),
        ];
    }
}
